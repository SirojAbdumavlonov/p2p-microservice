version: '3.8'

services:
  card-service:
    image: card-service:latest
    build:
        context: card-service
    expose:
        - "8081:8081"

    environment:
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
      - SPRING_APPLICATION_NAME=card-service


    depends_on:
        - postgres-card
        - zipkin
        - kafka
        - eureka-server

  service-service:
    image: service-service:latest
    build:
      context: service-service
    expose:
      - "8082:8082"

    environment:
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
      - SPRING_APPLICATION_NAME=service-service

    depends_on:
      - postgres-service
      - zipkin
      - kafka
      - eureka-server

  user-service:
    image: user-service:latest
    build:
      context: user-service
    expose:
      - "8083:8083"

    environment:
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
      - SPRING_APPLICATION_NAME=user-service

    depends_on:
      - postgres-user
      - zipkin
      - kafka
      - eureka-server


  api-gateway:
    image: api-gateway:latest
    build:
      context: api-gateway
    expose:
      - "8080:8080"

    environment:
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
      - SPRING_APPLICATION_NAME=api-gateway

    depends_on:
      - zipkin
      - kafka
      - eureka-server

  eureka-server:
    image: eureka:latest
    build:
      context: eureka-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/

  postgres-card:
    image: postgres:latest
    container_name: card-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: card
    ports:
      - "127.0.0.1:5433:5432"
    volumes:
      - postgres-card-data:/var/lib/postgresql/data
    restart: unless-stopped

  postgres-service:
    image: postgres:latest
    container_name: service-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: service
    ports:
      - "127.0.0.1:5434:5432"
    volumes:
      - postgres-service-data:/var/lib/postgresql/data
    restart: unless-stopped

  postgres-user:
    image: postgres:latest
    container_name: user-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user
    ports:
      - "127.0.0.1:5435:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  kafka:
    image: bitnami/kafka:latest
    container_name: ms-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    depends_on:
      - kafka

volumes:
  postgres-user-data:
  postgres-service-data:
  postgres-card-data:

networks:
  microservices-net:

